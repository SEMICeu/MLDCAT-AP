@prefix dct: <http://purl.org/dc/terms/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

<http://openml.org/openml/estimationProcedure-type> a skos:ConceptScheme;
  dct:description "The possible type of a estimation procedure";
  dct:title "Estimation Procedure type";
  skos:hasTopConcept <http://openml.org/openml/estimationProcedure-type#crossvalidation>,
    <http://openml.org/openml/estimationProcedure-type#customholdout>, <http://openml.org/openml/estimationProcedure-type#holdout>,
    <http://openml.org/openml/estimationProcedure-type#holdoutordered>, <http://openml.org/openml/estimationProcedure-type#holdoutunlabeled>,
    <http://openml.org/openml/estimationProcedure-type#leaveoneout>, <http://openml.org/openml/estimationProcedure-type#testontrainingdata>,
    <http://openml.org/openml/estimationProcedure-type#testthentrain> .

<http://openml.org/openml/estimationProcedure-type#crossvalidation> a skos:Concept;
  skos:definition "Cross-validation or ‘k-fold cross-validation’ is when the dataset is randomly split up into ‘k’ groups. One of the groups is used as the test set and the rest are used as the training set."@en;
  skos:inScheme <http://openml.org/openml/estimationProcedure-type>;
  skos:prefLabel "Cross validation"@en;
  skos:topConceptOf <http://openml.org/openml/estimationProcedure-type> .

<http://openml.org/openml/estimationProcedure-type#leaveoneout> a skos:Concept;
  skos:definition "Leave one out is a cross validation where k is equal the number of records in the entire dataset"@en;
  skos:inScheme <http://openml.org/openml/estimationProcedure-type>;
  skos:prefLabel "Leave one out"@en;
  skos:topConceptOf <http://openml.org/openml/estimationProcedure-type> .

<http://openml.org/openml/estimationProcedure-type#holdout> a skos:Concept;
  skos:definition "Hold-out is when a dataset is split into a ‘train’ and ‘test’ set"@en;
  skos:inScheme <http://openml.org/openml/estimationProcedure-type>;
  skos:prefLabel "Holdout"@en;
  skos:topConceptOf <http://openml.org/openml/estimationProcedure-type> .

<http://openml.org/openml/estimationProcedure-type#testthentrain> a skos:Concept;
  skos:inScheme <http://openml.org/openml/estimationProcedure-type>;
  skos:prefLabel "Test then train"@en;
  skos:topConceptOf <http://openml.org/openml/estimationProcedure-type> .

<http://openml.org/openml/estimationProcedure-type#customholdout> a skos:Concept;
  skos:inScheme <http://openml.org/openml/estimationProcedure-type>;
  skos:prefLabel "Custom Holdout"@en;
  skos:topConceptOf <http://openml.org/openml/estimationProcedure-type> .

<http://openml.org/openml/estimationProcedure-type#testontrainingdata> a skos:Concept;
  skos:inScheme <http://openml.org/openml/estimationProcedure-type>;
  skos:prefLabel "Test on training data"@en;
  skos:topConceptOf <http://openml.org/openml/estimationProcedure-type> .

<http://openml.org/openml/estimationProcedure-type#holdoutunlabeled> a skos:Concept;
  skos:inScheme <http://openml.org/openml/estimationProcedure-type>;
  skos:prefLabel "Holdout unlabeled"@en;
  skos:topConceptOf <http://openml.org/openml/estimationProcedure-type> .

<http://openml.org/openml/estimationProcedure-type#holdoutordered> a skos:Concept;
  skos:inScheme <http://openml.org/openml/estimationProcedure-type>;
  skos:prefLabel "Holdout ordered"@en;
  skos:topConceptOf <http://openml.org/openml/estimationProcedure-type> .